CREATE TABLE country(
cid SERIAL primary key,
country_name varchar(250),
country_code varchar(20)
);


INSERT INTO country(country_name, country_code) VALUES
('Kenya', 'KE'),
('Uganda', 'UG'),
('Rwanda', 'RW'),
('Ethiopia', 'ET'),
('Somalia', 'SO'),
('Djibouti', 'DJ'),
('Burundi', 'BR'),
('South Sudan', 'SS'),
('Eritrea', 'ER'),
('Sudan', 'SD'),
('Tanzania', 'TZ');

--To reference the provided IDs for Sudan in relation to your existing country table, you can create a new table that links the IDs to their corresponding cid (country ID) from the country table. This new table will establish a foreign key relationship, enabling you to associate those IDs with the corresponding country.
CREATE TABLE country_files (
    file_id SERIAL PRIMARY KEY,
    cid INT,
    file_reference INT,
    FOREIGN KEY (cid) REFERENCES country(cid) ON DELETE CASCADE
);

INSERT INTO country_files (cid, file_reference) VALUES
(10, 179),
(10, 180),
(10, 177),
(10, 178),
(10, 149),
(10, 150),
(10, 151),
(10, 152),
(10, 153),
(10, 154),
(10, 155),
(10, 156),
(10, 157),
(10, 158),
(10, 159),
(10, 160),
(10, 161),
(10, 162),
(10, 163),
(10, 175),
(10, 201),
(10, 181),
(10, 169),
(10, 182),
(10, 184),
(10, 167),
(10, 164),
(10, 165),
(10, 166),
(10, 171),
(10, 185),
(10, 186),
(10, 188),
(10, 189),
(10, 190),
(10, 191),
(10, 193),
(10, 194),
(10, 195),
(10, 196),
(10, 197),
(10, 198),
(10, 199),
(10, 170),
(10, 174),
(10, 183),
(10, 187),
(10, 192),
(10, 200),
(10, 168),
(10, 172),
(10, 173),
(10, 176),
(7,27),
(7,30),
(7,32),
(7,35),
(7,36),
(7,37),
(7,38),
(7,39),
(7,40),
(7,41),
(7,42),
(7,46),
(7,50),
(7,53),
(7,54),
(7,55),
(7,61),
(7,62),
(7,63),
(7,65),
(7,66),
(7,67),
(7,69),
(7,70),
(7,74),
(7,75),
(7,76),
(7,79),
(7,83),
(7,84),
(7,85),
(7,86),
(7,87),
(7,88),
(7,89),
(7,90),
(7,91),
(7,92),
(7,93),
(7,94),
(7,95),
(7,96),
(7,97),
(7,9),
(7,10),
(7,11),
(7,12),
(7,13),
(7,14),
(7,15),
(7,16),
(7,17),
(7,18),
(7,19),
(7,20),
(7,21),
(7,22),
(7,23),
(7,24),
(7,28),
(7,29),
(7,31),
(7,49),
(7,2),
(7,4),
(7,5),
(7,56),
(7,58),
(7,59),
(7,60),
(7,73),
(7,82),
(7,6),
(7,7),
(7,8),
(7,25),
(7,26),
(7,34),
(7,44),
(7,47),
(7,48),
(7,51),
(7,52),
(7,3),
(7,57),
(7,71),
(7,72),
(7,78),
(7,80),
(7,81),
(7,33),
(7,43),
(7,77),
(7,64),
(7,68),
(7,1),
(1,122),
(1,123),
(1,124),
(1,125),
(1,126),
(1,127),
(2,204),
(2,205),
(2,206),
(2,207),
(2,208),
(2,202),
(2,209),
(2,210),
(2,211),
(2,212),
(2,213),
(2,214),
(2,215),
(2,203),
(2,216),
(2,217),
(2,218),
(2,219),
(6,101),
(6,102),
(6,105),
(6,107),
(6,109),
(6,110),
(6,111),
(6,108),
(6,104),
(6,99),
(6,103),
(6,98),
(6,100),
(6,106),
(6,112),
(5,139),
(5,141),
(5,144),
(5,147),
(5,128),
(5,129),
(5,130),
(5,131),
(5,132),
(5,133),
(5,134),
(5,135),
(5,136),
(5,137),
(5,138),
(5,140),
(5,142),
(5,143),
(5,145),
(5,146),
(5,148),
(8,149),
(8,150),
(8,151),
(8,152),
(8,153),
(8,154),
(8,155),
(8,156),
(8,157),
(8,158),
(8,159),
(8,160),
(8,161),
(8,162),
(8,163),
(8,164),
(8,165),
(8,100),
(4,116),
(4,113),
(4,114),
(4,115),
(4,117),
(4,118),
(4,119),
(4,120),
(4,121);

select * from country;

SELECT * from public.dtm_file_metadata;
SELECT distinct countryid from public.swarm_master;

SELECT * from public.country_files;

select distinct id from public.dtm_file_contents;
select distinct file_id from public.country_files;



