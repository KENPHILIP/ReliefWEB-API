# -*- coding: utf-8 -*-
"""DTM_DATA_EXTRACTION.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WCR4kbBItDF2XEegWMdUtlM2pfYOb1Te

The script automates the retrieval and organization of DTM (Displacement Tracking Matrix) datasets from the IOM (International Organization for Migration) API for countries in East and Horn of Africa associated specifically for ICPAC regions (Intergovernmental Authority on Development Climate Prediction and Applications Centre). It begins by defining necessary imports and setting up endpoint URLs, country lists, and dataset components. The main functionality includes two primary functions: `download_country_datasets` and `display_file_titles`.

- `download_country_datasets` downloads datasets for specified countries and year ranges, constructing URLs tailored to each country and including specified dataset components. It makes GET requests to fetch the data and saves each dataset as an Excel file in a structured directory (`./DTM_IOM_datasets/{country}`). Error handling ensures reliability during data retrieval.

- `display_file_titles` reads and displays the sheet titles of downloaded Excel files for a given country, utilizing `openpyxl` for file manipulation. It handles exceptions gracefully in case of reading errors.

The `main` function coordinates the entire process by creating a main folder (`./DTM_IOM_datasets`) to store all downloaded data. It iterates through each country in the defined list (`east_horn_africa_countries`), calling `download_country_datasets` to fetch datasets and `display_file_titles` to show their details.
"""

import os
import requests
import openpyxl
from urllib.parse import urlencode, quote_plus

# Define the endpoint URL
endpoint_url = "https://dtm.iom.int/data-and-analysis/dtm-api"

# List of East and Horn of Africa countries in ICPAC
east_horn_africa_countries = [
    "Burundi", "Djibouti", "Eritrea", "Ethiopia", "Kenya",
    "Rwanda", "Somalia", "South Sudan", "Sudan", "Tanzania", "Uganda"
]

# Dataset components to include
components = [
    "Mobility Tracking", "Event Tracking", "Village Assessment",
    "Survey", "Community Perceptions", "Displacement Solutions",
    "Site Assessment", "Baseline Assessment"
]

# Create a main folder for all datasets
output_folder = "./DTM_IOM_datasets"
os.makedirs(output_folder, exist_ok=True)

# Function to fetch datasets for a given country and year range
def fetch_datasets(country, start_year=2000, end_year=2024):
    for year in range(start_year, end_year + 1):
        for component in components:
            params = {
                "country": country,
                "dataset_type": "info_sheet",
                "regional_dataset": "all",
                "year": year,
                "components[]": component
            }
            url = f"{endpoint_url}?{urlencode(params, quote_via=quote_plus)}"

            try:
                response = requests.get(url)
                if response.status_code == 200:
                    # Save the response content (Excel file) directly to the output folder
                    filename = f"{country}_DTM_data_{year}_{component.replace(' ', '_')}.xlsx"
                    filepath = os.path.join(output_folder, filename)
                    with open(filepath, 'wb') as f:
                        f.write(response.content)
                    print(f"Downloaded {filename}")
                else:
                    print(f"Failed to download {country} datasets for {year}, {component}. Status code: {response.status_code}")
            except requests.exceptions.RequestException as e:
                print(f"Error fetching {country} datasets for {year}, {component}: {e}")

# Main function to iterate over all countries and fetch datasets
def main():
    for country in east_horn_africa_countries:
        fetch_datasets(country)

if __name__ == "__main__":
    main()

